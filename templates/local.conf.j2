[[local|localrc]]
# Default passwords
ADMIN_PASSWORD=password
MYSQL_PASSWORD=password
RABBIT_PASSWORD=password
SERVICE_PASSWORD=password
SERVICE_TOKEN=password
#MULTI_HOST=1

{% if docker %}
VIRT_DRIVER=docker
SOLUM_IMAGE_FORMAT=docker
DEFAULT_IMAGE_NAME=cirros
{% endif %}

# Enable Logging
LOGFILE=/opt/stack/logs/stack.sh.log
VERBOSE=True
LOG_COLOR=True
SCREEN_LOGDIR=/opt/stack/logs

{% if vagrant_provider == 'openstack' %}
HOST_IP={{ ansible_default_ipv4.address }}
{% else %}
HOST_IP={{ public_ip }}
{% endif %}

RECLONE={{ reclone }}

# Additional images
IMAGE_URLS=http://download.cirros-cloud.net/0.3.1/cirros-0.3.1-x86_64-uec.tar.gz
{% if solum %}
IMAGE_URLS+=,http://cc42a68525a2dda0151c-9a7653a0ba84bd9342f239dc5349667e.r38.cf1.rackcdn.com/cedarish.qcow2
{% endif %}

HORIZON_BRANCH={{ openstack_branch }}
KEYSTONE_BRANCH={{ openstack_branch }}
GLANCE_BRANCH={{ openstack_branch }}
CINDER_BRANCH={{ openstack_branch }}
NOVA_BRANCH={{ openstack_branch }}
NEUTRON_BRANCH={{ openstack_branch }}
CEILOMETER_BRANCH={{ openstack_branch }}
HEAT_BRANCH={{ openstack_branch }}
SWIFT_BRANCH={{ openstack_branch }}
GLANCECLIENT_BRANCH={{ openstack_branch }}
KEYSTONECLIENT_BRANCH={{ openstack_branch }}
NOVACLIENT_BRANCH={{ openstack_branch }}
CINDERCLIENT_BRANCH={{ openstack_branch }}
CEILOMETERCLIENT_BRANCH={{ openstack_branch }}
OPENSTACKCLIENT_BRANCH={{ openstack_branch }}
SOLUM_BRANCH={{ openstack_branch }}
TROVE_BRANCH={{ openstack_branch }}

HORIZON_REPO=git://{{ git_mirror }}/openstack/horizon.git
KEYSTONE_REPO=git://{{ git_mirror }}/openstack/keystone.git
GLANCE_REPO=git://{{ git_mirror }}/openstack/glance.git
CINDER_REPO=git://{{ git_mirror }}/openstack/cinder.git
NOVA_REPO=git://{{ git_mirror }}/openstack/nova.git
NEUTRON_REPO=git://{{ git_mirror }}/openstack/neutron.git
CEILOMETER_REPO=git://{{ git_mirror }}/openstack/ceilometer.git
HEAT_REPO=git://{{ git_mirror }}/openstack/heat.git
SWIFT_REPO=git://{{ git_mirror }}/openstack/swift.git
GLANCECLIENT_REPO=git://{{ git_mirror }}/openstack/python-glanceclient.git
KEYSTONECLIENT_REPO=git://{{ git_mirror }}/openstack/python-keystoneclient.git
NOVACLIENT_REPO=git://{{ git_mirror }}/openstack/python-novaclient.git
CINDERCLIENT_REPO=git://{{ git_mirror }}/openstack/python-cinderclient.git
CEILOMETERCLIENT_REPO=git://{{ git_mirror }}/openstack/python-ceilometerclient.git
OPENSTACKCLIENT_REPO=git://{{ git_mirror }}/openstack/python-openstackclient.git
SOLUM_REPO=git://{{ git_mirror }}/stackforge/solum.git
TROVECLIENT_REPO=git://{{ git_mirror }}/openstack/python-troveclient.git
TROVE_REPO=git://{{ git_mirror }}/openstack/trove.git

{% if neutron %}
#
# Enable Neutron
#
# https://wiki.openstack.org/wiki/NeutronDevstack
disable_service n-net
enable_service q-svc
enable_service q-agt
enable_service q-dhcp
enable_service q-l3
enable_service q-meta
enable_service neutron
{% endif %}

{% if ceilometer %}
#
# Enable Ceilometer
#
enable_service ceilometer-acompute
enable_service ceilometer-acentral
enable_service ceilometer-anotification
enable_service ceilometer-collector
enable_service ceilometer-api
enable_service ceilometer-alarm-notifier
enable_service ceilometer-alarm-evaluator

CEILOMETER_PIPELINE_INTERVAL=60
{% endif %}

{% if mistral %}
enable_service mistral
{% endif %}

{% if swift %}
# Enable Swift
enable_service s-proxy
enable_service s-object
enable_service s-container
enable_service s-account
{% endif %}

{% if solum %}
# Enable Solum
enable_service solum
enable_service solum-api
enable_service solum-build-api
enable_service solum-deployer
enable_service solum-conductor
enable_service solum-worker

SOLUM_INSTALL_CEDARISH=True
{% endif %}

{% if murano %}
# Enable Murano
enable_service murano
enable_service murano-api
enable_service murano-engine
{% endif %}

{% if not security_groups %}
# Disable security groups entirely
Q_USE_SECGROUP=False
LIBVIRT_FIREWALL_DRIVER=nova.virt.firewall.NoopFirewallDriver
{% endif %}

{% if not tempest %}
disable_service tempest
{% endif %}

{% if marconi %}
# Enable Marconi
enable_service marconi-server
{% endif %}

{% if trove %}
# Enable Trove
enable_service trove
enable_service tr-api
enable_service tr-tmgr
enable_service tr-cond
{% endif %}

